.\" Copyright (c) 2000
.\"	Core-SDI SA. All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgment:
.\"    This product includes software developed by Core-SDI SA and its
.\"    contributors.
.\" 4. Neither the name of Core-SDI SA nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.ta 3m 3m
.Dd May 10, 2000
.Dt PEOCHK 1
.Os Core-SDI
.Sh NAME
.Nm peochk
.Nd Initial key generator and integrity log file checker
.Sh SYNOPSIS
.Nm peochk
.Op Fl f Ar logfile
.Op Fl g
.Op Fl h
.Op Fl i Ar key0file
.Op Fl k Ar keyfile
.Op Fl l
.Op Fl m Ar hash_method
.Op Fl q
.Op \fIlogfile\fP
.Sh DESCRIPTION
.Nm peochk
generates initial key file and checks log files generated by syslogd(8)
using the
.Pa peo output module .
The options are as follows:
.Bl -tag -width Ds
.It Fl f Ar logfile
Specify the pathname of a log file, if \fIlogfile\fP is not specified
using this option data is readed from standard input; the default is
\fI/var/log/messages\fP.
.It Fl g
Generates an initial key file; the Admin should put this
file into a secure place and remove it from the specified path
(see -i and -k options); when this option is not specified
\fBpeochk\fP is in check mode.
.It Fl h
Displays a little help.
.It Fl i Ar key0file
Specify the initial key pathname; the default is
the keyfile with a '0' char added at the end (see -k option).
.It Fl k Ar keyfile
Specify the key pathname (this file is used by the \fIpeo output module\fP
to generate a hash key from the last logged message); the default is
\fI/var/ssyslogd/key.xxx\fP where \fIxxx\fP is the logfile (specified with
-f option or without it) with all '/' replaced by '.'.
.It Fl l
Used in check mode to detect the first corrupted line; see the
\fIpeo output module\fP on syslogd(8).
.It Fl m Ar hash_method
Specifies the hash method used to generate the logkey, \fIhash_method\fP
should be one of \fImd5\fP, \fIsha1\fP, or \fIrmd160\fP (see the \fIpeo
output module\fP on syslogd(8)); the default is \fIsha1\fP.
.It Fl q
Quiet mode.
.El
.Pp
If the -g option is specified \fBpeochk\fP generates the initial key and
puts it into keyfile and key0file, the admin should memorice the contents
of \fIkey0file\fP and destroy it; after that he/she should edit the
syslog.conf(5) file and activate the \fIpeo output module\fP with the
same options as here (key file, hash method, and line detection).
.Pp
If the -g option is not specified \fBpeochk\fP is in check mode, it reads
the log file and generates keys based on the initial one provided by the admin
(using the -i option), if the two keys are not identical it means that the
log file is corrupted.
.Sh EXAMPLES
If you want to protect the file /var/log/authlog you can:
.Pp
.in +4
.ll -4
1. run the command:
.Pp
	\fBpeochk -g -f /var/log/authlog -i authkey0 -m rmd160 -l\fP
.Pp
this will generate the \fI/var/ssylog/key.var.log.authlog\fP file
with the initial key in binary mode and the \fI./authkey0\fP file with that
key translated to ascii, the hash method used to generate the key is
\fIrmd160\fP, the \fI-l\fP option activates the line corrupted detection
mode (by creating the file \fI/var/ssyslog/key.var.log.authlog.mac\fP, see
\fIpeo output module\fP on syslogd(8)).
.sp 0
You should memorice the contents of \fI./authkey0\fP file and
rm(1) it.
.Pp
2. Edit the syslogd.conf(5) file and enable the \fIpeo output
module\fP with something like this:
.Pp
	\fB cosas de syslogd.conf para activar peo \fP
.Pp
3. Activate syslogd(8):
.Pp
	\fBkill -HUP `cat /var/run/syslog.pid`\fP
.Pp
4. When you believe that someone owned your machine you can:
.Pp
	\fBpeochk -f /var/log/authlog -i mykey\fP
.Pp
the contents of \fImykey\fP should be the same as \fI./key0file\fP
generated in step 1; with the command above you can verify that the
file was (or not) corrupted.
.in -4
.ll +4
.Sh SEE ALSO
.Xr syslogd 8 ,
.Xr syslog.conf 5
.El
.Sh BUGS
if you found bugs, please report it to msyslog-list@core-sdi.com
