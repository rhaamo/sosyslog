.\"	$CoreSDI: syslogd.8,v 1.17 2001/10/18 20:32:36 alejo Exp $
.\"
.\" Copyright (c) 1983, 1986, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     from: @(#)syslogd.8	8.1 (Berkeley) 6/6/93
.\"	$NetBSD: syslogd.8,v 1.3 1996/01/02 17:41:48 perry Exp $
.\"
.Dd June 6, 1993
.Dt SYSLOGD 8
.Os Core-SDI
.Sh NAME
modular
.Nm syslog daemon
.Nd log systems messages
.Sh SYNOPSIS
.Nm syslogd
.Op Fl u
.Op Fl d Ar level
.Op Fl f Ar config_file
.Op Fl m Ar mark_interval
.Op Fl a Ar path
.Op Fl p Ar log_socket
.Op Fl i Ar input
.Sh DESCRIPTION
Modular
.Nm syslog
daemon reads and logs messages to the system console, log files, other
machines and/or users as specified by its configuration file. This
implementation was based on OpenBSD's syslog daemon.
.Pp
Supported command line options are:
.Bl -tag -width Ds
.It Fl d Ar level
Enable debugging to the standard output,
and do not disassociate from the controlling terminal. The
.Pa level
is a number used to differentiate error reports. Up to 10 reports all
critical errors that stop the daemon from working; up to 20 are the
serious errors that stop some input or output; up to 30 are noncritical
errors; up to 100 are warnings and potential errors; up to 100 are informative
messages; and finally up to 200 are all possible reporting on what is going
on.
.It Fl f Ar config_file
Specify the pathname of an alternate configuration file;
the default is
.Pa /etc/syslog.conf .
.It Fl m Ar mark_interval
Select the number of minutes between ``mark'' messages;
the default is 20 minutes.
.It Fl u
Allow the historical ``insecure'' mode, in which syslogd will
accept input from the UDP port as specified in
.Pa /etc/services .
Some software wants this, but you can be subjected to a variety of
attacks over the network, including attackers remotely filling logs.
.It Fl p Ar log_socket
Specify the pathname of an alternate log socket to be used instead;
the default is
.Pa /dev/log .
This option is deprecated by
.Fl i
option.
.It Fl a Pa path
Specify a location where
.Nm syslogd
should place an additional log socket.
The primary use for this is to place additional log sockets in
.Pa /dev/log
of various chroot filespaces. This option is predecated by
.Fl i
option.
.It Fl i Ar input_module [ module_arguments ]
Enables the specified input modules, see
.Xr im_* 8 .
.El
.Pp
.Nm Syslogd
reads its configuration file when it starts up and whenever it
receives a hangup signal.
For information on the format of the configuration file,
see
.Xr syslog.conf 5 .
.Pp
.Nm Syslogd
creates the file
.Pa /var/run/syslog.pid ,
and stores its process
id there.
This can be used to kill or reconfigure
.Nm syslogd .
.Pp
The message sent to
.Nm syslogd
should consist of a single line.
The message can contain a priority code, which should be a preceding
decimal number in angle braces, for example,
.Sq Aq 5 .
This priority code should map into the priorities defined in the
include file
.Aq Pa sys/syslog.h .
.Sh EXAMPLES
To run modular
.Nm
on BSD systems you should:
.Pp
.Dl # syslogd
.Pp
with the command above two inputs modules are created,
.Cm bsd,
that reads BSD kernel messages from
.Pa /dev/klog,
and
.Cm unix,
opens
.Pa /dev/log
socket to log standard messages.
To run modular
.Nm
on Linux systems you should:
.Pp
.Dl # syslogd
.Pp
with the command above two inputs modules are created,
.Cm linux,
that reads linux kernel messages from
.Pa /dev/klog,
and
.Cm unix,
opens
.Pa /dev/log
socket to log standard messages.
.Sh FILES
.Bl -tag -width /var/run/syslog.pid -compact
.It Pa /etc/syslog.conf
The configuration file.
.It Pa /var/run/syslog.pid
The process id of current
.Nm syslogd .
.It Pa /dev/log
Name of the
.Tn UNIX
domain datagram log socket.
.It Pa /dev/klog
The kernel log device.
.El
.Sh SEE ALSO
.Xr syslog 3 ,
.Xr syslog.conf.5 ,
.Xr im_bsd.8 ,
.Xr im_doors.8 ,
.Xr im_linux.8 ,
.Xr im_streams.8 ,
.Xr im_tcp.8 ,
.Xr im_unix.8 ,
.Xr im_udp.8 ,
.Xr om_classic.8 ,
.Xr om_mysql.8 ,
.Xr om_peo.8 ,
.Xr om_pgsql.8 ,
.Xr om_regex.8 ,
.Xr om_tcp.8 ,
.Xr om_udp.8 ,
.Xr peochk.8 ,
.Xr syslogd.8
.Sh HISTORY
Modular
.Nm
is based on the original syslogd daemon appeared in
.Bx 4.3 .
.Sh BUGS
Submit bugs at this project's Sourceforge Bug reporting system at:
http://sourceforge.net/tracker/?func=add&group_id=25741&atid=385117
You may also report them directly to the authors; send an email to
core.devel.alat@corest.com, describing the problem the most you can,
containing also machine description, hardware description, the
configuration file (/etc/syslog.conf), the OS description, and the
invoking command line.
The more you describe the bug, the faster we can fix it.
